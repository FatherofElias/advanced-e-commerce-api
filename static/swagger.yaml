swagger: "2.0"
info:
  title: "E-Commerce API"
  description: "API documentation for the Advanced E-Commerce Application"
  version: "1.0.0"
host: "127.0.0.1:5000"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"

paths:
  /login:
    post:
      summary: "User login"
      parameters:
        - in: "body"
          name: "credentials"
          description: "User credentials"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              password:
                type: "string"
      responses:
        200:
          description: "Login successful"
          schema:
            type: "object"
            properties:
              token:
                type: "string"
        401:
          description: "Invalid credentials"


  /customers:
    post:
      summary: "Create customer"
      parameters:
        - in: "body"
          name: "customer"
          description: "Customer details"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              email:
                type: "string"
              phone:
                type: "string"
      responses:
        201:
          description: "Customer created successfully"
          schema:
            $ref: "#/definitions/Customer"
        403:
          description: "Admin access required"



  /customers/{customer_id}:
    get:
      summary: "Get customer"
      parameters:
        - in: "path"
          name: "customer_id"
          type: "integer"
          required: true
      responses:
        200:
          description: "Customer retrieved successfully"
          schema:
            $ref: "#/definitions/Customer"
        403:
          description: "Admin access required"
        404:
          description: "Customer not found"

    put:
      summary: "Update customer"
      parameters:
        - in: "path"
          name: "customer_id"
          type: "integer"
          required: true
        - in: "body"
          name: "customer"
          description: "Updated customer details"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              email:
                type: "string"
              phone:
                type: "string"
      responses:
        200:
          description: "Customer updated successfully"
          schema:
            $ref: "#/definitions/Customer"
        403:
          description: "Admin access required"
        404:
          description: "Customer not found"


    delete:
      summary: "Delete customer"
      parameters:
        - in: "path"
          name: "customer_id"
          type: "integer"
          required: true
      responses:
        200:
          description: "Customer deleted successfully"
        403:
          description: "Admin access required"
        404:
          description: "Customer not found"


  /customer_accounts:
    post:
      summary: "Create customer account"
      parameters:
        - in: "body"
          name: "account"
          description: "Customer account details"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              password:
                type: "string"
              customer_id:
                type: "integer"
      responses:
        201:
          description: "Customer account created successfully"
          schema:
            $ref: "#/definitions/CustomerAccount"
        403:
          description: "Admin access required"

  /customer_accounts/{account_id}:
    get:
      summary: "Get customer account"
      parameters:
        - in: "path"
          name: "account_id"
          type: "integer"
          required: true
      responses:
        200:
          description: "Customer account retrieved successfully"
          schema:
            $ref: "#/definitions/CustomerAccount"
        403:
          description: "Admin access required"
        404:
          description: "Customer account not found"


    put:
      summary: "Update customer account"
      parameters:
        - in: "path"
          name: "account_id"
          type: "integer"
          required: true
        - in: "body"
          name: "account"
          description: "Updated customer account details"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              password:
                type: "string"
      responses:
        200:
          description: "Customer account updated successfully"
          schema:
            $ref: "#/definitions/CustomerAccount"
        403:
          description: "Admin access required"
        404:
          description: "Customer account not found"


    delete:
      summary: "Delete customer account"
      parameters:
        - in: "path"
          name: "account_id"
          type: "integer"
          required: true
      responses:
        200:
          description: "Customer account deleted successfully"
        403:
          description: "Admin access required"
        404:
          description: "Customer account not found"


  /products:
    post:
      summary: "Create product"
      parameters:
        - in: "body"
          name: "product"
          description: "Product details"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              price:
                type: "number"
                format: "float"
      responses:
        201:
          description: "Product created successfully"
          schema:
            $ref: "#/definitions/Product"
        403:
          description: "Admin access required"


  /products:
    get:
      summary: "List products"
      responses:
        200:
          description: "List of products retrieved successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        403:
          description: "Admin access required"


  /products/{product_id}:
    get:
      summary: "Get product"
      parameters:
        - in: "path"
          name: "product_id"
          type: "integer"
          required: true
      responses:
        200:
          description: "Product retrieved successfully"
          schema:
            $ref: "#/definitions/Product"
        403:
          description: "Admin access required"
        404:
          description: "Product not found"


    put:
      summary: "Update product"
      parameters:
        - in: "path"
          name: "product_id"
          type: "integer"
          required: true
        - in: "body"
          name: "product"
          description: "Updated product details"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              price:
                type: "number"
                format: "float"
      responses:
        200:
          description: "Product updated successfully"
          schema:
            $ref: "#/definitions/Product"
        403:
          description: "Admin access required"
        404:
          description: "Product not found"



    delete:
      summary: "Delete product"
      parameters:
        - in: "path"
          name: "product_id"
          type: "integer"
          required: true
      responses:
        200:
          description: "Product deleted successfully"
        403:
          description: "Admin access required"
        404:
          description: "Product not found"



  /orders:
    post:
      summary: "Place order"
      parameters:
        - in: "body"
          name: "order"
          description: "Order details"
          required: true
          schema:
            type: "object"
            properties:
              customer_id:
                type: "integer"
              product_id:
                type: "integer"
              quantity:
                type: "integer"
              total_price:
                type: "number"
                format: "float"
      responses:
        201:
          description: "Order placed successfully"
          schema:
            $ref: "#/definitions/Order"


  /orders/{order_id}:
    get:
      summary: "Get order"
      parameters:
        - in: "path"
          name: "order_id"
          type: "integer"
          required: true
      responses:
        200:
          description: "Order retrieved successfully"
          schema:
            $ref: "#/definitions/Order"
        403:
          description: "Admin access required"
        404:
          description: "Order not found"





definitions:
  Customer:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"

  CustomerAccount:
    type: "object"
    properties:
      id:
        type: "integer"
      username:
        type: "string"
      customer_id:
        type: "integer"

  Product:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      price:
        type: "number"
        format: "float"

  Order:
    type: "object"
    properties:
      id:
        type: "integer"
      customer_id:
        type: "integer"
      product_id:
        type: "integer"
      quantity:
        type: "integer"
      total_price:
        type: "number"
        format: "float"


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
